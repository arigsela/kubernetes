# cert-manager v1.16.2 configuration
# Fixed schema for official cert-manager Helm chart

# Install CRDs (correct property name)
installCRDs: true

# Enable certificate owner reference (correct property name) 
enableCertificateOwnerRef: true

# Global configuration
global:
  commonLabels: {}
  priorityClassName: ""
  rbac:
    create: true
  podSecurityPolicy:
    enabled: false
    useAppArmor: false

# Main cert-manager controller
replicaCount: 1

image:
  repository: quay.io/jetstack/cert-manager-controller
  pullPolicy: IfNotPresent

resources:
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 150m
    memory: 128Mi

prometheus:
  enabled: true
  servicemonitor:
    enabled: false

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

nodeSelector:
  pool: system
  kubernetes.io/os: linux

tolerations: []
affinity: {}

# Webhook component
webhook:
  replicaCount: 1

  resources:
    requests:
      cpu: 20m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  nodeSelector:
    pool: system
    kubernetes.io/os: linux

# CA Injector component
cainjector:
  enabled: true
  replicaCount: 1

  resources:
    requests:
      cpu: 20m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  nodeSelector:
    pool: system
    kubernetes.io/os: linux

# ACME solver
acmesolver:
  image:
    repository: quay.io/jetstack/cert-manager-acmesolver
    pullPolicy: IfNotPresent

# Startup API check
startupapicheck:
  enabled: true

  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 50m
      memory: 64Mi

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  nodeSelector:
    pool: system
    kubernetes.io/os: linux

# Service account
serviceAccount:
  create: true
  automountServiceAccountToken: true