apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup
  namespace: mysql
  labels:
    app: mysql-backup
    component: backup
spec:
  # Schedule: Run daily at 2 AM UTC
  schedule: "0 2 * * *"

  # Keep history of last 3 successful and 3 failed jobs
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3

  # Don't allow concurrent backups
  concurrencyPolicy: Forbid

  # Start deadline - fail if job doesn't start within 5 minutes of scheduled time
  startingDeadlineSeconds: 300

  jobTemplate:
    metadata:
      labels:
        app: mysql-backup
        component: backup
    spec:
      # Retry twice on failure
      backoffLimit: 2

      # Clean up completed jobs after 24 hours
      ttlSecondsAfterFinished: 86400

      template:
        metadata:
          labels:
            app: mysql-backup
            component: backup
        spec:
          restartPolicy: OnFailure

          containers:
          - name: mysql-backup
            image: 852893458518.dkr.ecr.us-east-2.amazonaws.com/mysql-backup:1.0.0
            imagePullPolicy: Always

            env:
            # MySQL connection details
            - name: MYSQL_HOST
              value: "mysql.mysql.svc.cluster.local"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-credentials
                  key: password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-credentials
                  key: database

            # AWS credentials (from Vault via ExternalSecret)
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mysql-backup-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mysql-backup-credentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: mysql-backup-credentials
                  key: S3_BUCKET
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: mysql-backup-credentials
                  key: AWS_REGION
            - name: BACKUP_RETENTION_DAYS
              valueFrom:
                secretKeyRef:
                  name: mysql-backup-credentials
                  key: BACKUP_RETENTION_DAYS

            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"

          # ECR image pull credentials
          imagePullSecrets:
          - name: ecr-registry

          securityContext:
            runAsNonRoot: true
            runAsUser: 999
            fsGroup: 999
