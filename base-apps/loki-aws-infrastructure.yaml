# ArgoCD Application for Loki AWS Infrastructure
# Deploys S3 bucket and related AWS resources via Crossplane
# This enables 100% GitOps management of AWS resources

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki-aws-infrastructure
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  source:
    repoURL: https://github.com/arigsela/kubernetes
    targetRevision: main
    path: base-apps/loki-aws-infrastructure

  destination:
    server: https://kubernetes.default.svc
    namespace: crossplane-system

  syncPolicy:
    automated:
      prune: true
      selfHeal: true

    syncOptions:
      - Validate=true
      - RespectIgnoreDifferences=true
      # Skip dry-run for Crossplane resources as their CRDs are dynamically created
      - SkipDryRunOnMissingResource=true

    # Retry on sync failure
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  # Ignore status changes on Crossplane resources
  ignoreDifferences:
    - group: s3.aws.upbound.io
      kind: Bucket
      jsonPointers:
        - /status
    - group: s3.aws.upbound.io
      kind: BucketLifecycleConfiguration
      jsonPointers:
        - /status
    - group: iam.aws.upbound.io
      kind: Policy
      jsonPointers:
        - /status
    - group: iam.aws.upbound.io
      kind: User
      jsonPointers:
        - /status
    - group: iam.aws.upbound.io
      kind: AccessKey
      jsonPointers:
        - /status

---
# This application will manage:
# 1. S3 bucket: loki-logs-homelab
# 2. S3 lifecycle configuration for cost optimization
# 3. IAM user: loki-s3-user
# 4. IAM policy: loki-s3-access
# 5. IAM access keys for Loki to use
#
# All managed through Git commits - true GitOps!
